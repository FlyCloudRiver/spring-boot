<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper" >

    <!-- resultMap 指定表中字段和实体类中属性的映射-->
    <!-- property：主键在pojo中的属性名 -->
    <!-- column：主键在数据库中的列名 -->
    <resultMap id="userMapper" type="com.example.demo.entity.User">
        <!--主键用<id>标签，表示把表中的id字段映射到实体类User中的user_id属性-->
        <id column="id" property="id"/>
        <!--非主键用<reslut>标签，表示把表中的name字段映射到实体类User的user_name属性-->
        <result column="user_name" property="userName"/>
        <result column="user_age" property="userAge"/>
        <result column="user_password" property="userPassword"/>
    </resultMap>


    <!--查询用户数目-->
    <select id="selectUserCount" resultType="Integer">
        select count(id) from user;
    </select>
    <!--根据ID查找用户-->
    <select id="selectUserById"  resultMap="userMapper" parameterType="Integer">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <!--登录-->
    <select id="login" resultMap="userMapper">
        select * from user where user_name=#{name} and user_password=#{password}
    </select>
    <!--查询所有用户信息-->
  <!--  <select id="findAll" resultMap="userMapper">
        select * from user limit #{start},#{size}
    </select>-->

    <!--/*根据姓名查询用户（模糊查询）*/-->
    <select id="selectUserByName" resultMap="userMapper">
        select * from user
        <if test="userName!=null and userName!=''">
            where user_name like "%"#{userName}"%"
        </if>
        limit #{start},#{size}
    </select>

    <!--跟新用户-->
    <update id="updateUser" parameterType="com.example.demo.entity.User">
        UPDATE user
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null and userName!=''">
                user_name=#{userName},
            </if>
            <if test="userAge!=null">
                user_age=#{userAge},
            </if>
            <if test="userPassword!=null and userPassword!=''">
                user_password=#{userPassword},
            </if>

        </trim>
        WHERE id=#{id}
    </update>

    <!--添加用户-->
    <insert id="addUser" parameterType="com.example.demo.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName!=''">
                user_name,
            </if>

            <if test="userAge != null and userAge!=''">
                user_age,
            </if>

            <if test="userPassword != null and userPassword!=''">
                user_password,
            </if>

        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName},
            </if>
            <if test="userName != null">
                #{userAge},
            </if>
            <if test="userName != null">
                #{userPassword},
            </if>
        </trim>
    </insert>

    <delete id="deletUser" parameterType="Integer">
        delete from user where id = #{id}
    </delete>
</mapper>
